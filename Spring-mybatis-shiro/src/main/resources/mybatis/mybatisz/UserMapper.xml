<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.myspring7z.framework.mybatisz.repository.UserDao">

	<resultMap id="userResult" type="User">
        <id property="id" column="id" />
        <result property="loginName" column="login_name" />
        <result property="name" column="name" />
        <result property="password" column="password" />
        <result property="salt" column="salt" />
        <result property="roles" column="roles" />
        <result property="registerDate" column="register_date" />

    </resultMap>

	<!--
		获取用户: 输出直接映射到对象, login_name列要"as loginName"以方便映射 
	-->
	<select id="get" parameterType="long" resultType="User">
		select id,
		login_name as loginName,
		name,
		password,
		salt,
		roles,
		register_date as registerDate
		from s_user 
		where id=#{id}
	</select>
	
	<!-- 插入用户： 1.由数据库生成id并赋值到user对象 2.输入用对象 -->
	<insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into s_user (
		login_name, name, password, salt,roles,register_date)
		values (
		#{loginName}, #{name}, #{password}, #{salt}, #{roles}, #{registerDate})
	</insert>
	
	<!-- 根据用户名查找用户 -->
	<select id="findUserByLoginName" parameterType="map" resultType="User">
		select id,
		login_name as loginName,
		name,
		password,
		salt,
		roles,
		register_date as registerDate
		from s_user
		<where>
			<if test="loginName != null">
				login_name=#{loginName}
			</if>
		</where>
	</select>
	
	<!-- 更新一条记录 -->  
    <update id="updateUser" parameterType="User">  
        update s_user 
        set login_name = #{loginName},   
        name = #{name},
        password = #{password},
        salt = #{salt},
        roles = #{roles},
        register_date = #{registerDate}
        where id = #{id}  
    </update>
	
	<!-- 删除用户 -->
	<delete id="delete" parameterType="long">
	     delete from s_user where id=#{id}
	</delete>
	
</mapper> 
